/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BungieAPI.Client.SwaggerDateConverter;

namespace BungieAPI.Model
{
    /// <summary>
    /// The various known UI styles in which an item can be highlighted. It&#39;ll be up to you to determine what you want to show based on this highlighting, BNet doesn&#39;t have any assets that correspond to these states. And yeah, RiseOfIron and Comet have their own special highlight states. Don&#39;t ask me, I can&#39;t imagine they&#39;re still used.
    /// </summary>
    /// <value>The various known UI styles in which an item can be highlighted. It&#39;ll be up to you to determine what you want to show based on this highlighting, BNet doesn&#39;t have any assets that correspond to these states. And yeah, RiseOfIron and Comet have their own special highlight states. Don&#39;t ask me, I can&#39;t imagine they&#39;re still used.</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum DestinyActivityGraphNodeHighlightType
    {
        
        /// <summary>
        /// Enum NUMBER_0 for value: 0
        /// </summary>
        [EnumMember(Value = "0")]
        NUMBER_0 = 1,
        
        /// <summary>
        /// Enum NUMBER_1 for value: 1
        /// </summary>
        [EnumMember(Value = "1")]
        NUMBER_1 = 2,
        
        /// <summary>
        /// Enum NUMBER_2 for value: 2
        /// </summary>
        [EnumMember(Value = "2")]
        NUMBER_2 = 3,
        
        /// <summary>
        /// Enum NUMBER_3 for value: 3
        /// </summary>
        [EnumMember(Value = "3")]
        NUMBER_3 = 4,
        
        /// <summary>
        /// Enum NUMBER_4 for value: 4
        /// </summary>
        [EnumMember(Value = "4")]
        NUMBER_4 = 5
    }

}
