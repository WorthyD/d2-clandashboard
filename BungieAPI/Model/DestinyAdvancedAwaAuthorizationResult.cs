/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BungieAPI.Client.SwaggerDateConverter;

namespace BungieAPI.Model
{
    /// <summary>
    /// DestinyAdvancedAwaAuthorizationResult
    /// </summary>
    [DataContract]
    public partial class DestinyAdvancedAwaAuthorizationResult :  IEquatable<DestinyAdvancedAwaAuthorizationResult>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinyAdvancedAwaAuthorizationResult" /> class.
        /// </summary>
        /// <param name="UserSelection">Indication of how the user responded to the request. If the value is \&quot;Approved\&quot; the actionToken will contain the token that can be presented when performing the advanced write action..</param>
        /// <param name="ResponseReason">ResponseReason.</param>
        /// <param name="DeveloperNote">Message to the app developer to help understand the response..</param>
        /// <param name="ActionToken">Credential used to prove the user authorized an advanced write action..</param>
        /// <param name="MaximumNumberOfUses">This token may be used to perform the requested action this number of times, at a maximum. If this value is 0, then there is no limit..</param>
        /// <param name="ValidUntil">Time, UTC, when token expires..</param>
        /// <param name="Type">Advanced Write Action Type from the permission request..</param>
        /// <param name="MembershipType">MembershipType from the permission request..</param>
        public DestinyAdvancedAwaAuthorizationResult(DestinyAdvancedAwaUserSelection UserSelection = default(DestinyAdvancedAwaUserSelection), DestinyAdvancedAwaResponseReason ResponseReason = default(DestinyAdvancedAwaResponseReason), string DeveloperNote = default(string), string ActionToken = default(string), int? MaximumNumberOfUses = default(int?), DateTime? ValidUntil = default(DateTime?), DestinyAdvancedAwaType Type = default(DestinyAdvancedAwaType), BungieMembershipType MembershipType = default(BungieMembershipType))
        {
            this.UserSelection = UserSelection;
            this.ResponseReason = ResponseReason;
            this.DeveloperNote = DeveloperNote;
            this.ActionToken = ActionToken;
            this.MaximumNumberOfUses = MaximumNumberOfUses;
            this.ValidUntil = ValidUntil;
            this.Type = Type;
            this.MembershipType = MembershipType;
        }
        
        /// <summary>
        /// Indication of how the user responded to the request. If the value is \&quot;Approved\&quot; the actionToken will contain the token that can be presented when performing the advanced write action.
        /// </summary>
        /// <value>Indication of how the user responded to the request. If the value is \&quot;Approved\&quot; the actionToken will contain the token that can be presented when performing the advanced write action.</value>
        [DataMember(Name="userSelection", EmitDefaultValue=false)]
        public DestinyAdvancedAwaUserSelection UserSelection { get; set; }

        /// <summary>
        /// Gets or Sets ResponseReason
        /// </summary>
        [DataMember(Name="responseReason", EmitDefaultValue=false)]
        public DestinyAdvancedAwaResponseReason ResponseReason { get; set; }

        /// <summary>
        /// Message to the app developer to help understand the response.
        /// </summary>
        /// <value>Message to the app developer to help understand the response.</value>
        [DataMember(Name="developerNote", EmitDefaultValue=false)]
        public string DeveloperNote { get; set; }

        /// <summary>
        /// Credential used to prove the user authorized an advanced write action.
        /// </summary>
        /// <value>Credential used to prove the user authorized an advanced write action.</value>
        [DataMember(Name="actionToken", EmitDefaultValue=false)]
        public string ActionToken { get; set; }

        /// <summary>
        /// This token may be used to perform the requested action this number of times, at a maximum. If this value is 0, then there is no limit.
        /// </summary>
        /// <value>This token may be used to perform the requested action this number of times, at a maximum. If this value is 0, then there is no limit.</value>
        [DataMember(Name="maximumNumberOfUses", EmitDefaultValue=false)]
        public int? MaximumNumberOfUses { get; set; }

        /// <summary>
        /// Time, UTC, when token expires.
        /// </summary>
        /// <value>Time, UTC, when token expires.</value>
        [DataMember(Name="validUntil", EmitDefaultValue=false)]
        public DateTime? ValidUntil { get; set; }

        /// <summary>
        /// Advanced Write Action Type from the permission request.
        /// </summary>
        /// <value>Advanced Write Action Type from the permission request.</value>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public DestinyAdvancedAwaType Type { get; set; }

        /// <summary>
        /// MembershipType from the permission request.
        /// </summary>
        /// <value>MembershipType from the permission request.</value>
        [DataMember(Name="membershipType", EmitDefaultValue=false)]
        public BungieMembershipType MembershipType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DestinyAdvancedAwaAuthorizationResult {\n");
            sb.Append("  UserSelection: ").Append(UserSelection).Append("\n");
            sb.Append("  ResponseReason: ").Append(ResponseReason).Append("\n");
            sb.Append("  DeveloperNote: ").Append(DeveloperNote).Append("\n");
            sb.Append("  ActionToken: ").Append(ActionToken).Append("\n");
            sb.Append("  MaximumNumberOfUses: ").Append(MaximumNumberOfUses).Append("\n");
            sb.Append("  ValidUntil: ").Append(ValidUntil).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  MembershipType: ").Append(MembershipType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DestinyAdvancedAwaAuthorizationResult);
        }

        /// <summary>
        /// Returns true if DestinyAdvancedAwaAuthorizationResult instances are equal
        /// </summary>
        /// <param name="input">Instance of DestinyAdvancedAwaAuthorizationResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DestinyAdvancedAwaAuthorizationResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.UserSelection == input.UserSelection ||
                    (this.UserSelection != null &&
                    this.UserSelection.Equals(input.UserSelection))
                ) && 
                (
                    this.ResponseReason == input.ResponseReason ||
                    (this.ResponseReason != null &&
                    this.ResponseReason.Equals(input.ResponseReason))
                ) && 
                (
                    this.DeveloperNote == input.DeveloperNote ||
                    (this.DeveloperNote != null &&
                    this.DeveloperNote.Equals(input.DeveloperNote))
                ) && 
                (
                    this.ActionToken == input.ActionToken ||
                    (this.ActionToken != null &&
                    this.ActionToken.Equals(input.ActionToken))
                ) && 
                (
                    this.MaximumNumberOfUses == input.MaximumNumberOfUses ||
                    (this.MaximumNumberOfUses != null &&
                    this.MaximumNumberOfUses.Equals(input.MaximumNumberOfUses))
                ) && 
                (
                    this.ValidUntil == input.ValidUntil ||
                    (this.ValidUntil != null &&
                    this.ValidUntil.Equals(input.ValidUntil))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.MembershipType == input.MembershipType ||
                    (this.MembershipType != null &&
                    this.MembershipType.Equals(input.MembershipType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UserSelection != null)
                    hashCode = hashCode * 59 + this.UserSelection.GetHashCode();
                if (this.ResponseReason != null)
                    hashCode = hashCode * 59 + this.ResponseReason.GetHashCode();
                if (this.DeveloperNote != null)
                    hashCode = hashCode * 59 + this.DeveloperNote.GetHashCode();
                if (this.ActionToken != null)
                    hashCode = hashCode * 59 + this.ActionToken.GetHashCode();
                if (this.MaximumNumberOfUses != null)
                    hashCode = hashCode * 59 + this.MaximumNumberOfUses.GetHashCode();
                if (this.ValidUntil != null)
                    hashCode = hashCode * 59 + this.ValidUntil.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.MembershipType != null)
                    hashCode = hashCode * 59 + this.MembershipType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
