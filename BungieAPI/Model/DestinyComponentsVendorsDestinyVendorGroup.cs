/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BungieAPI.Client.SwaggerDateConverter;

namespace BungieAPI.Model
{
    /// <summary>
    /// Represents a specific group of vendors that can be rendered in the recommended order.  How do we figure out this order? It&#39;s a long story, and will likely get more complicated over time.
    /// </summary>
    [DataContract]
    public partial class DestinyComponentsVendorsDestinyVendorGroup :  IEquatable<DestinyComponentsVendorsDestinyVendorGroup>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinyComponentsVendorsDestinyVendorGroup" /> class.
        /// </summary>
        /// <param name="VendorGroupHash">VendorGroupHash.</param>
        /// <param name="VendorHashes">The ordered list of vendors within a particular group..</param>
        public DestinyComponentsVendorsDestinyVendorGroup(uint? VendorGroupHash = default(uint?), List<uint?> VendorHashes = default(List<uint?>))
        {
            this.VendorGroupHash = VendorGroupHash;
            this.VendorHashes = VendorHashes;
        }
        
        /// <summary>
        /// Gets or Sets VendorGroupHash
        /// </summary>
        [DataMember(Name="vendorGroupHash", EmitDefaultValue=false)]
        public uint? VendorGroupHash { get; set; }

        /// <summary>
        /// The ordered list of vendors within a particular group.
        /// </summary>
        /// <value>The ordered list of vendors within a particular group.</value>
        [DataMember(Name="vendorHashes", EmitDefaultValue=false)]
        public List<uint?> VendorHashes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DestinyComponentsVendorsDestinyVendorGroup {\n");
            sb.Append("  VendorGroupHash: ").Append(VendorGroupHash).Append("\n");
            sb.Append("  VendorHashes: ").Append(VendorHashes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DestinyComponentsVendorsDestinyVendorGroup);
        }

        /// <summary>
        /// Returns true if DestinyComponentsVendorsDestinyVendorGroup instances are equal
        /// </summary>
        /// <param name="input">Instance of DestinyComponentsVendorsDestinyVendorGroup to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DestinyComponentsVendorsDestinyVendorGroup input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.VendorGroupHash == input.VendorGroupHash ||
                    (this.VendorGroupHash != null &&
                    this.VendorGroupHash.Equals(input.VendorGroupHash))
                ) && 
                (
                    this.VendorHashes == input.VendorHashes ||
                    this.VendorHashes != null &&
                    this.VendorHashes.SequenceEqual(input.VendorHashes)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.VendorGroupHash != null)
                    hashCode = hashCode * 59 + this.VendorGroupHash.GetHashCode();
                if (this.VendorHashes != null)
                    hashCode = hashCode * 59 + this.VendorHashes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
