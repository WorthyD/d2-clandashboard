/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BungieAPI.Client.SwaggerDateConverter;

namespace BungieAPI.Model
{
    /// <summary>
    /// A response containing all of the components for all requested vendors.
    /// </summary>
    [DataContract]
    public partial class DestinyResponsesInventoryChangedResponse :  IEquatable<DestinyResponsesInventoryChangedResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinyResponsesInventoryChangedResponse" /> class.
        /// </summary>
        /// <param name="addedInventoryItems">Items that appeared in the inventory possibly as a result of an action..</param>
        /// <param name="removedInventoryItems">Items that disappeared from the inventory possibly as a result of an action..</param>
        public DestinyResponsesInventoryChangedResponse(List<DestinyEntitiesItemsDestinyItemComponent> addedInventoryItems = default(List<DestinyEntitiesItemsDestinyItemComponent>), List<DestinyEntitiesItemsDestinyItemComponent> removedInventoryItems = default(List<DestinyEntitiesItemsDestinyItemComponent>))
        {
            this.AddedInventoryItems = addedInventoryItems;
            this.RemovedInventoryItems = removedInventoryItems;
        }
        
        /// <summary>
        /// Items that appeared in the inventory possibly as a result of an action.
        /// </summary>
        /// <value>Items that appeared in the inventory possibly as a result of an action.</value>
        [DataMember(Name="addedInventoryItems", EmitDefaultValue=false)]
        public List<DestinyEntitiesItemsDestinyItemComponent> AddedInventoryItems { get; set; }

        /// <summary>
        /// Items that disappeared from the inventory possibly as a result of an action.
        /// </summary>
        /// <value>Items that disappeared from the inventory possibly as a result of an action.</value>
        [DataMember(Name="removedInventoryItems", EmitDefaultValue=false)]
        public List<DestinyEntitiesItemsDestinyItemComponent> RemovedInventoryItems { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DestinyResponsesInventoryChangedResponse {\n");
            sb.Append("  AddedInventoryItems: ").Append(AddedInventoryItems).Append("\n");
            sb.Append("  RemovedInventoryItems: ").Append(RemovedInventoryItems).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DestinyResponsesInventoryChangedResponse);
        }

        /// <summary>
        /// Returns true if DestinyResponsesInventoryChangedResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of DestinyResponsesInventoryChangedResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DestinyResponsesInventoryChangedResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AddedInventoryItems == input.AddedInventoryItems ||
                    this.AddedInventoryItems != null &&
                    this.AddedInventoryItems.SequenceEqual(input.AddedInventoryItems)
                ) && 
                (
                    this.RemovedInventoryItems == input.RemovedInventoryItems ||
                    this.RemovedInventoryItems != null &&
                    this.RemovedInventoryItems.SequenceEqual(input.RemovedInventoryItems)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AddedInventoryItems != null)
                    hashCode = hashCode * 59 + this.AddedInventoryItems.GetHashCode();
                if (this.RemovedInventoryItems != null)
                    hashCode = hashCode * 59 + this.RemovedInventoryItems.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
