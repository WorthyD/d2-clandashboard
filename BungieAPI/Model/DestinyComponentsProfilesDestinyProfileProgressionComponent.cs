/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BungieAPI.Client.SwaggerDateConverter;

namespace BungieAPI.Model
{
    /// <summary>
    /// The set of progression-related information that applies at a Profile-wide level for your Destiny experience. This differs from the Jimi Hendrix Experience because there&#39;s less guitars on fire. Yet. #spoileralert?  This will include information such as Checklist info.
    /// </summary>
    [DataContract]
    public partial class DestinyComponentsProfilesDestinyProfileProgressionComponent :  IEquatable<DestinyComponentsProfilesDestinyProfileProgressionComponent>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinyComponentsProfilesDestinyProfileProgressionComponent" /> class.
        /// </summary>
        /// <param name="Checklists">The set of checklists that can be examined on a profile-wide basis, keyed by the hash identifier of the Checklist (DestinyChecklistDefinition)  For each checklist returned, its value is itself a Dictionary keyed by the checklist&#39;s hash identifier with the value being a boolean indicating if it&#39;s been discovered yet..</param>
        public DestinyComponentsProfilesDestinyProfileProgressionComponent(Dictionary<string, Dictionary<string, bool?>> Checklists = default(Dictionary<string, Dictionary<string, bool?>>))
        {
            this.Checklists = Checklists;
        }
        
        /// <summary>
        /// The set of checklists that can be examined on a profile-wide basis, keyed by the hash identifier of the Checklist (DestinyChecklistDefinition)  For each checklist returned, its value is itself a Dictionary keyed by the checklist&#39;s hash identifier with the value being a boolean indicating if it&#39;s been discovered yet.
        /// </summary>
        /// <value>The set of checklists that can be examined on a profile-wide basis, keyed by the hash identifier of the Checklist (DestinyChecklistDefinition)  For each checklist returned, its value is itself a Dictionary keyed by the checklist&#39;s hash identifier with the value being a boolean indicating if it&#39;s been discovered yet.</value>
        [DataMember(Name="checklists", EmitDefaultValue=false)]
        public Dictionary<string, Dictionary<string, bool?>> Checklists { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DestinyComponentsProfilesDestinyProfileProgressionComponent {\n");
            sb.Append("  Checklists: ").Append(Checklists).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DestinyComponentsProfilesDestinyProfileProgressionComponent);
        }

        /// <summary>
        /// Returns true if DestinyComponentsProfilesDestinyProfileProgressionComponent instances are equal
        /// </summary>
        /// <param name="input">Instance of DestinyComponentsProfilesDestinyProfileProgressionComponent to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DestinyComponentsProfilesDestinyProfileProgressionComponent input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Checklists == input.Checklists ||
                    this.Checklists != null &&
                    this.Checklists.SequenceEqual(input.Checklists)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Checklists != null)
                    hashCode = hashCode * 59 + this.Checklists.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
