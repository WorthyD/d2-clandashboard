// <auto-generated />
using System;
using D2.Dashboard.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace D2.Dashboard.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190101122751_adding experiation date")]
    partial class addingexperiationdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("D2.Dashboard.Core.Entities.Clan", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("About");

                    b.Property<string>("AvatarPath");

                    b.Property<string>("BannerPath");

                    b.Property<string>("ClanInfoJSON");

                    b.Property<DateTime>("CreationDate");

                    b.Property<long>("GroupId");

                    b.Property<int>("GroupType");

                    b.Property<bool>("IsPublic");

                    b.Property<bool>("IsPublicTopicAdminOnly");

                    b.Property<DateTime>("LastMemberUpdate");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("Locale");

                    b.Property<int>("MemberCount");

                    b.Property<long>("MembershipIdCreated");

                    b.Property<DateTime>("ModificationDate");

                    b.Property<string>("Motto");

                    b.Property<string>("Name");

                    b.Property<string>("Theme");

                    b.HasKey("Id");

                    b.ToTable("Clans");
                });

            modelBuilder.Entity("D2.Dashboard.Core.Entities.ClanMember", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("BungieIconPath");

                    b.Property<string>("DestinyDisplayName");

                    b.Property<long>("DestinyMembershipId");

                    b.Property<int>("DestinyMembershiptType");

                    b.Property<long>("GroupId");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<int>("MemberType");

                    b.HasKey("Id");

                    b.ToTable("ClanMembers");
                });

            modelBuilder.Entity("D2.Dashboard.Core.Entities.ClanMemberProfile", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("LastPlayed");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<long>("TriumpScore");

                    b.HasKey("Id");

                    b.ToTable("ClanMemberProfiles");
                });

            modelBuilder.Entity("D2.Dashboard.Core.Entities.ClanMemberStats", b =>
                {
                    b.Property<long>("Id");

                    b.Property<int>("AdventuresCompleted");

                    b.Property<int>("AllParticipantsTimePlayed");

                    b.Property<int>("HeroicPublicEventsCompleted");

                    b.Property<int>("HighestLightLevel");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<int>("PublicEventsCompleted");

                    b.Property<double>("PvEEfficiency");

                    b.Property<int>("PvEKills");

                    b.Property<int>("PvEPrecisionKills");

                    b.Property<long>("PvESecondsPlayed");

                    b.Property<int>("PvPActivitiesEntered");

                    b.Property<int>("PvPActivitiesWon");

                    b.Property<int>("PvPEfficiency");

                    b.Property<long>("PvPSecondsPlayed");

                    b.Property<long>("SecondsPlayed");

                    b.HasKey("Id");

                    b.ToTable("ClanMemberStats");
                });

            modelBuilder.Entity("D2.Dashboard.Core.Entities.ClanMemberProfile", b =>
                {
                    b.HasOne("D2.Dashboard.Core.Entities.ClanMember", "Member")
                        .WithOne("Profile")
                        .HasForeignKey("D2.Dashboard.Core.Entities.ClanMemberProfile", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("D2.Dashboard.Core.Entities.ClanMemberStats", b =>
                {
                    b.HasOne("D2.Dashboard.Core.Entities.ClanMember", "Member")
                        .WithOne("Stats")
                        .HasForeignKey("D2.Dashboard.Core.Entities.ClanMemberStats", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
